select * from df;
select *from df1_orders;
--Query 1: Top 10 highest revenue generating products 
select "product_id",sum("list_price" * "quantity") as total_revenue from df group by "product_id" order by "total_revenue" desc limit 10;

-----Query2:Find the top 5 cities with the highest profit margins
select o."city",  SUM(d."profit") AS Total_Profit FROM df o JOIN  df1_orders d ON 
    o."sub_category" = d."sub_category"GROUP BY  o."city" ORDER BY Total_Profit DESC LIMIT 5;

-----Query3:Calculate the total discount given for each category
SELECT category,SUM(discount) AS total_discount FROM df GROUP BY category;

----Qurey4:Find the average sale price per product category
SELECT category, AVG(sale_price) AS average_sale_price FROM df GROUP BY category;

----- Query 5:Find the region with the highest average sale price
SELECT region, AVG(sale_price) AS average_sale_price FROM df GROUP BY region ORDER BY average_sale_price DESC LIMIT 1;

-----Query 6: Find the total profit per category
SELECT category, SUM(sale_price - cost_price) AS total_profit FROM df GROUP BY category;

----Query 7:Identify the top 3 segments with the highest quantity of orders
SELECT segment,SUM(quantity) AS total_quantity FROM df GROUP BY segment ORDER BY total_quantity DESC LIMIT 3;

---- Query8:Determine the average discount percentage given per region
SELECT region, AVG(discount_percent) AS average_discount_percent FROM df GROUP BY region;

-----Query9: Find the product category with the highest total profit
 SELECT category, SUM(sale_price - cost_price) AS total_profit FROM df GROUP BY category ORDER BY total_profit DESC LIMIT 1;

----Query10:Calculate the total revenue generated per year
 select "year",sum("sales price" * "quantity") as "total revenue" from df1_orders group by "year" order by "year";

-----Query11:Products with No Profit
select "product_id" from df group by "product_id" having sum("profit")=0;

-----Query12:Calculate the total revenue per shipping mode
SELECT ship_mode, SUM(quantity * sale_price) AS total_revenue FROM df GROUP BY ship_mode ORDER BY total_revenue DESC;

-----Query13:Determine the top 3 cities with the lowest total discounts
SELECT city, SUM(discount) AS total_discount FROM df GROUP BY city ORDER BY total_discount ASC LIMIT 3;

-----query14:Identify the sub-category with the highest revenue
SELECT sub_category, SUM(quantity * sale_price) AS revenue FROM df GROUP BY sub_category ORDER BY revenue DESC LIMIT 1;

-----Query15:Find the average quantity of orders per product category
SELECT category, AVG(quantity) AS average_quantity FROM df GROUP BY category ORDER BY average_quantity DESC;

-----Query 16:Find the product with the highest total quantity sold
SELECT product_id,SUM(quantity) AS total_quantity_sold FROM df GROUP BY product_id ORDER BY total_quantity_sold DESC LIMIT 1;

 -----Query 17: Total orders per segment  
        'SELECT COUNT(DISTINCT "order_id") AS total_orders FROM df;',

----Query18:ind the state with the highest number of orders
SELECT state, COUNT(*) AS order_count FROM df GROUP BY state ORDER BY order_count DESC LIMIT 1;

-----Query19:Calculate the total revenue and profit for each region
SELECT region, SUM(quantity * sale_price) AS total_revenue, SUM((sale_price - cost_price) * quantity) AS total_profit FROM df GROUP BY region ORDER BY total_revenue DESC;

------Query20:Calculate the percentage contribution of each region to total revenue
SELECT region,SUM(quantity * sale_price) AS total_revenue FROM df GROUP BY region;

